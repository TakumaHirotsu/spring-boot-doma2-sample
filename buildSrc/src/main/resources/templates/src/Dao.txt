package [[${daoPackageName}]];

import [[${dtoPackageName}]].[[${camelPhysicalFunctionName}]];
import [[${dtoPackageName}]].[[${camelPhysicalFunctionName}]]Criteria;
import java.util.List;
import java.util.Optional;
import java.util.stream.Collector;
import org.seasar.doma.*;
import org.seasar.doma.boot.ConfigAutowireable;
import org.seasar.doma.jdbc.SelectOptions;

@ConfigAutowireable
@Dao
public interface [[${camelPhysicalFunctionName}]]Dao {

    /**
     * [[${logicalFunctionName}]]を検索します。
     *
     * @param criteria
     * @param options
     * @return
     */
    @Select(strategy = SelectType.COLLECT)
    <R> R selectAll(final [[${camelPhysicalFunctionName}]]Criteria criteria, final SelectOptions options,
            final Collector<[[${camelPhysicalFunctionName}]], ?, R> collector);

    /**
     * [[${logicalFunctionName}]]を1件取得します。
     *
     * @param id
     * @return
     */
    @Select
    Optional<[[${camelPhysicalFunctionName}]]> selectById(Long id);

    /**
     * [[${logicalFunctionName}]]を1件取得します。
     *
     * @param criteria
     * @return
     */
    @Select
    Optional<[[${camelPhysicalFunctionName}]]> select([[${camelPhysicalFunctionName}]]Criteria criteria);

    /**
     * [[${logicalFunctionName}]]を登録します。
     *
     * @param [[${lowerPhysicalFunctionName}]]
     * @return
     */
    @Insert
    int insert([[${camelPhysicalFunctionName}]] [[${lowerPhysicalFunctionName}]]);

    /**
     * [[${logicalFunctionName}]]を更新します。
     *
     * @param [[${lowerPhysicalFunctionName}]]
     * @return
     */
    @Update
    int update([[${camelPhysicalFunctionName}]] [[${lowerPhysicalFunctionName}]]);

    /**
     * [[${logicalFunctionName}]]を論理削除します。
     *
     * @param [[${lowerPhysicalFunctionName}]]
     * @return
     */
    @Update(excludeNull = true) // NULLの項目は更新対象にしない
    int delete([[${camelPhysicalFunctionName}]] [[${lowerPhysicalFunctionName}]]);

    /**
     * [[${logicalFunctionName}]]を一括登録します。
     *
     * @param [[${lowerPhysicalMultiFunctionName}]]
     * @return
     */
    @BatchInsert
    int[] insert(List<[[${camelPhysicalFunctionName}]]> [[${lowerPhysicalMultiFunctionName}]]);

    /**
     * [[${logicalFunctionName}]]を一括更新します。
     *
     * @param [[${lowerPhysicalMultiFunctionName}]]
     * @return
     */
    @BatchUpdate
    int[] update(List<[[${camelPhysicalFunctionName}]]> [[${lowerPhysicalMultiFunctionName}]]);
}
